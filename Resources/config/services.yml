services:
    Markup\NeedleBundle\Console\:
        resource: '../../Console/*'
        autowire: true
        autoconfigure: true
    Markup\NeedleBundle\Indexer\SubjectDataMapperProvider: ~
    Markup\NeedleBundle\Service\SearchServiceLocator:
        arguments:
            - []
        tags: [container.service_locator]
    Markup\NeedleBundle\Service\SearchServiceLocatorInterface: '@Markup\NeedleBundle\Service\SearchServiceLocator'
    markup_needle.index_scheduler:
        class: Markup\NeedleBundle\Scheduler\IndexScheduler
        arguments:
            - '@doctrine'
            - '@logger'
    markup_needle.facet.value_canonicalizer:
        class: Markup\NeedleBundle\Facet\FacetValueCanonicalizer
        lazy: true
        public: false
    markup_needle.twig.extension.helper:
        class: Markup\NeedleBundle\Twig\SearchHelperExtension
        arguments:
            - '@markup_needle.facet.value_canonicalizer'
        tags:
            - { name: twig.extension }
    markup_needle.interceptor:
        parent: markup_needle.interceptor.prototype
        calls:
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.route' ] ]
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.search' ] ]
        abstract: true
    markup_needle.interceptor_configurator:
        class: Markup\NeedleBundle\Intercept\InterceptorConfigurator
        calls:
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.route' ] ]
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.search' ] ]
    markup_needle.interceptor.prototype:
        class: Markup\NeedleBundle\Intercept\Interceptor
        arguments:
            - '@event_dispatcher'
        shared: false
    markup_needle.configured_interceptor_provider:
        class: Markup\NeedleBundle\Intercept\ConfiguredInterceptorProvider
        arguments:
            - '@markup_needle.interceptor.prototype'
            - '@markup_needle.interceptor_configurator'
    markup_needle.intercept_mapper.route:
        class: Markup\NeedleBundle\Intercept\RouteInterceptMapper
        arguments:
            - '@router'
    markup_needle.intercept_mapper.search:
        class: Markup\NeedleBundle\Intercept\SearchInterceptMapper
    markup_needle.listener.logging:
        class: Markup\NeedleBundle\EventListener\LoggingEventListener
        arguments:
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: markup_needle.unresolved_intercept, method: logUnresolvedIntercept }
    Markup\NeedleBundle\Corpus\CorpusProvider: ~
    markup_needle.listener.index_scheduling:
        class: Markup\NeedleBundle\EventListener\IndexSchedulingEventListener
        arguments:
            - '@markup_needle.index_scheduler'
    markup_needle.filter_provider.null:
        class: Markup\NeedleBundle\Filter\NullFilterProvider
    markup_needle.filter_provider.simple:
        class: Markup\NeedleBundle\Filter\SimpleFilterProvider
    markup_needle.facet_provider.simple:
        class: Markup\NeedleBundle\Facet\SimpleFacetProvider
    markup_needle.facet_provider.consume_filters.abstract:
        class: Markup\NeedleBundle\Facet\ConsumeFiltersFacetProvider
        abstract: true
    markup_needle.facet_set_decorator_provider:
        class: Markup\NeedleBundle\Facet\FacetSetDecoratorProvider
    markup_needle.collator_provider.null:
        class: Markup\NeedleBundle\Collator\NullCollatorProvider
    markup_needle.search_context.null:
        class: Markup\NeedleBundle\Context\SearchContext
        arguments:
            - 12
    markup_needle.sort_order_provider.simple:
        abstract: true
        class: Markup\NeedleBundle\Facet\SimpleSortOrderProvider
    markup_needle.config_factory:
        class: Markup\NeedleBundle\Config\ContextConfigurationFactory
    markup_needle.collator_stack:
        class: Markup\NeedleBundle\Collator\CollatorStack
    markup_needle.collator.fixed_values:
        class: Markup\NeedleBundle\Collator\FixedValueCollator
        abstract: true
    markup_needle.collator.alpha:
        class: Markup\NeedleBundle\Collator\AlphaCollator
    markup_needle.collator.number:
        class: Markup\NeedleBundle\Collator\NumberCollator
    markup_needle.collator.word_list:
        class: Markup\NeedleBundle\Collator\WordListCollator
        abstract: true

    markup_needle.suggester.noop:
        class: Markup\NeedleBundle\Suggest\NoopSuggestService
        tags:
            - { name: markup_needle.suggester, alias: noop }
    Markup\NeedleBundle\Suggest\SuggestServiceLocator:
        arguments:
            - []
        autowire: true
        tags: ['container.service_locator']
    markup_needle.handler_provider.null:
        class: Markup\NeedleBundle\Query\NullHandlerProvider
    markup_needle.spellcheck.static_dictionary_provider:
        class: Markup\NeedleBundle\Spellcheck\StaticDictionaryProvider
    markup_needle.spellcheck.dictionary_provider.default:
        parent: markup_needle.spellcheck.static_dictionary_provider
        arguments:
            - spell
    markup_needle.spellcheck.default:
        class: Markup\NeedleBundle\Spellcheck\Spellcheck
        arguments:
            - '@markup_needle.spellcheck.dictionary_provider.default'
            - 10
    markup_needle.registry.attribute_specialization_context:
        class: Markup\NeedleBundle\Attribute\AttributeSpecializationContextRegistry

    Markup\NeedleBundle\Terms\TermsServiceLocator:
        arguments:
            - []
        tags: ['container.service_locator']
    Markup\NeedleBundle\Terms\NullTermsFieldProvider: ~
    markup_needle.registry.attribute.attribute_specialization_context_group:
        class: Markup\NeedleBundle\Attribute\AttributeSpecializationContextGroupRegistry
        arguments:
            - '@markup_needle.registry.attribute_specialization_context'
            - '@markup_needle.specialization_context_group_filter'
    markup_needle.specialization_context_group_filter:
        class: Markup\NeedleBundle\Attribute\CompositeSpecializationContextGroupFilter
    Markup\NeedleBundle\Synonyms\NoopSynonymClient: ~
    Markup\NeedleBundle\Service\NoopSearchService: ~
    Markup\NeedleBundle\Suggest\NoopSuggestService: ~
    Markup\NeedleBundle\Indexer\NoopIndexingMessager: ~
    Markup\NeedleBundle\Terms\NoopTermsService: ~

    Markup\NeedleBundle\Indexer\IndexingMessagerLocator:
        arguments:
            - []
        tags: [container.service_locator]

    Markup\NeedleBundle\Indexer\CorpusIndexingCommand:
        autowire: true
        shared: false
    markup_needle.exporter.closure: '@Markup\NeedleBundle\Indexer\CorpusIndexingCommand'
    markup_needle.exporter.closure.prototype:
        parent: markup_needle.exporter.closure
        shared: false
    markup_needle.exporter.closure.generator:
        class: Markup\NeedleBundle\Container\ServiceClosure
        arguments:
            - markup_needle.exporter.closure.prototype
        tags: [markup_needle.service_generator]
        deprecated: ~
