parameters:
    markup_needle.exporter.closure.class: Markup\NeedleBundle\Indexer\CorpusIndexingCommand
    markup_needle.check.solr.class: Markup\NeedleBundle\Check\SolrCheck
    markup_needle.solr.class: Markup\NeedleBundle\Service\SolrSearchService
    markup_needle.intercept.definition.class: Markup\NeedleBundle\Intercept\Definition
    markup_needle.intercept.matcher.normalized_list.class: Markup\NeedleBundle\Intercept\NormalizedListMatcher

services:
    markup_needle.exporter.closure:
        class: %markup_needle.exporter.closure.class%
        arguments:
            - '@markup_needle.corpus.provider'
            - '@markup_needle.solarium.client'
            - '@markup_needle.exporter.subject_data_mapper_provider'
            - '@markup_needle.filter_query.lucenifier'
            - '@event_dispatcher'
            - '@markup_needle.index_callback_provider'
            - true
            - '@logger'
            - ~
            - %markup_needle.allow_null_values_in_update_fields%
    markup_needle.exporter.closure.prototype:
        parent: markup_needle.exporter.closure
    markup_needle.exporter.closure.generator:
        parent: markup_needle.service_closure
        arguments:
            - markup_needle.exporter.closure.prototype
            - '@service_container'
    markup_needle.service_closure:
        class: Markup\NeedleBundle\Container\ServiceClosure
        abstract: true
    markup_needle.exporter.subject_data_mapper_provider:
        class: Markup\NeedleBundle\Indexer\SubjectDataMapperProvider
    markup_needle.check.solr:
        class: %markup_needle.check.solr.class%
        arguments:
            - '@markup_needle.solarium.client'
        tags:
            - { name: liip_monitor.check, alias: solr }
    markup_needle.query.builder.solarium:
        class: Markup\NeedleBundle\Builder\SolariumSelectQueryBuilder
        arguments:
            - '@markup_needle.solarium.client'
            - '@markup_needle.filter_query.lucenifier'
            - %markup_needle.debug%
    needle:
        class: %markup_needle.solr.class%
        arguments:
            - '@markup_needle.solarium.client'
            - '@markup_needle.query.builder.solarium'
            - '@?templating'
    markup_needle.index_scheduler:
        class: Markup\NeedleBundle\Scheduler\IndexScheduler
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@logger'
    markup_needle.solarium.helper:
        class: Solarium\Core\Query\Helper
    markup_needle.solarium.plugin.log_bad_requests:
        class: Markup\NeedleBundle\EventListener\SolariumLogBadRequestsPlugin
        calls:
            - [ setLogger, [ '@logger' ] ]
            - [ setEnabled, [ %markup_needle.solr.log_bad_requests_plugin.enabled% ] ]
    markup_needle.lucene.helper:
        class: Markup\NeedleBundle\Lucene\Helper
        arguments:
            - '@markup_needle.solarium.helper'
    markup_needle.filter_value.lucenifier:
        class: Markup\NeedleBundle\Lucene\FilterValueLucenifier
        arguments:
            - '@markup_needle.lucene.helper'
        public: false
    markup_needle.filter_query.lucenifier:
        class: Markup\NeedleBundle\Lucene\FilterQueryLucenifier
        arguments:
            - '@markup_needle.filter_value.lucenifier'
        public: false
    markup_needle.facet.value_canonicalizer:
        class: Markup\NeedleBundle\Facet\FacetValueCanonicalizer
    markup_needle.twig.extension.helper:
        class: Markup\NeedleBundle\Twig\SearchHelperExtension
        arguments:
            - '@service_container'
        tags:
            - { name: twig.extension }
    markup_needle.interceptor:
        parent: markup_needle.interceptor.prototype
        calls:
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.route' ] ]
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.search' ] ]
        abstract: true
    markup_needle.interceptor_configurator:
        class: Markup\NeedleBundle\Intercept\InterceptorConfigurator
        calls:
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.route' ] ]
            - [ addInterceptMapper, [ '@markup_needle.intercept_mapper.search' ] ]
    markup_needle.interceptor.prototype:
        class: Markup\NeedleBundle\Intercept\Interceptor
        arguments:
            - '@event_dispatcher'
    markup_needle.interceptor.closure:
        parent: markup_needle.service_closure
        arguments:
            - markup_needle.interceptor.prototype
            - '@service_container'
    markup_needle.configured_interceptor_provider:
        class: Markup\NeedleBundle\Intercept\ConfiguredInterceptorProvider
        arguments:
            - '@markup_needle.interceptor.closure'
            - '@markup_needle.interceptor_configurator'
    markup_needle.intercept_mapper.route:
        class: Markup\NeedleBundle\Intercept\RouteInterceptMapper
        arguments:
            - '@router'
    markup_needle.intercept_mapper.search:
        class: Markup\NeedleBundle\Intercept\SearchInterceptMapper
    markup_needle.listener.logging:
        class: Markup\NeedleBundle\EventListener\LoggingEventListener
        arguments:
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: markup_needle.unresolved_intercept, method: logUnresolvedIntercept }
    markup_needle.corpus.provider:
        class: Markup\NeedleBundle\Corpus\CorpusProvider
    markup_needle.listener.index_scheduling:
        class: Markup\NeedleBundle\EventListener\IndexSchedulingEventListener
        arguments:
            - '@markup_needle.index_scheduler'
    markup_needle.filter_provider.null:
        class: Markup\NeedleBundle\Filter\NullFilterProvider
    markup_needle.filter_provider.simple:
        class: Markup\NeedleBundle\Filter\SimpleFilterProvider
    markup_needle.facet_provider.simple:
        class: Markup\NeedleBundle\Facet\SimpleFacetProvider
    markup_needle.facet_provider.consume_filters.abstract:
        class: Markup\NeedleBundle\Facet\ConsumeFiltersFacetProvider
        abstract: true
    markup_needle.facet_set_decorator_provider:
        class: Markup\NeedleBundle\Facet\FacetSetDecoratorProvider
    markup_needle.collator_provider.null:
        class: Markup\NeedleBundle\Collator\NullCollatorProvider
    markup_needle.search_context.null:
        class: Markup\NeedleBundle\Context\SearchContext
        arguments:
            - 12
    markup_needle.sort_order_provider.simple:
        abstract: true
        class: Markup\NeedleBundle\Facet\SimpleSortOrderProvider
    markup_needle.config_factory:
        class: Markup\NeedleBundle\Config\ContextConfigurationFactory
    markup_needle.collator_stack:
        class: Markup\NeedleBundle\Collator\CollatorStack
    markup_needle.collator.fixed_values:
        class: Markup\NeedleBundle\Collator\FixedValueCollator
        abstract: true
    markup_needle.collator.alpha:
        class: Markup\NeedleBundle\Collator\AlphaCollator
    markup_needle.collator.number:
        class: Markup\NeedleBundle\Collator\NumberCollator
    markup_needle.collator.word_list:
        class: Markup\NeedleBundle\Collator\WordListCollator
        abstract: true
    markup_needle.suggester.solr:
        class: Markup\NeedleBundle\Suggest\SolrSuggestService
        arguments:
            - '@markup_needle.solarium.client'
            - '@logger'
            - '@markup_needle.suggest_handler'
        tags:
            - { name: markup_needle.suggester, alias: solr }
    markup_needle.suggester.noop:
        class: Markup\NeedleBundle\Suggest\NoopSuggestService
        tags:
            - { name: markup_needle.suggester, alias: noop }
    markup_needle.suggester_provider:
        class: Markup\NeedleBundle\Suggest\SuggestServiceProvider
        arguments:
            - '@service_container'
    markup_needle.suggester:
        class: Markup\NeedleBundle\Suggest\SuggestServiceInterface
        factory_service: markup_needle.suggester_provider
        factory_method: getServiceForAlias
        arguments:
            - %markup_needle.suggester.alias%
    markup_needle.handler_provider.null:
        class: Markup\NeedleBundle\Query\NullHandlerProvider
    markup_needle.index_callback_provider:
        class: Markup\NeedleBundle\Indexer\IndexCallbackProvider
        arguments:
            - '@service_container'
    markup_needle.spellcheck.static_dictionary_provider:
        class: Markup\NeedleBundle\Spellcheck\StaticDictionaryProvider
    markup_needle.spellcheck.dictionary_provider.default:
        parent: markup_needle.spellcheck.static_dictionary_provider
        arguments:
            - spell
    markup_needle.spellcheck.default:
        class: Markup\NeedleBundle\Spellcheck\Spellcheck
        arguments:
            - '@markup_needle.spellcheck.dictionary_provider.default'
            - 10
    markup_needle.registry.attribute_specialization_context:
        class: Markup\NeedleBundle\Attribute\AttributeSpecializationContextRegistry
    markup_needle.terms_regex.solr:
        class: Markup\NeedleBundle\Terms\SolrRegexTermsService
        arguments:
            - '@markup_needle.solarium.client'
            - '@logger'
            - '@markup_needle.terms_field'
        tags:
            - { name: markup_needle.terms, alias: solr_regex }
    markup_needle.terms_prefix.solr:
        class: Markup\NeedleBundle\Terms\SolrPrefixTermsService
        arguments:
            - '@markup_needle.solarium.client'
            - '@logger'
            - '@markup_needle.terms_field'
        tags:
            - { name: markup_needle.terms, alias: solr_prefix }
    markup_needle.terms.noop:
        class: Markup\NeedleBundle\Terms\NoopTermsService
        tags:
            - { name: markup_needle.terms, alias: noop }
    markup_needle.terms_provider:
        class: Markup\NeedleBundle\Terms\TermsServiceProvider
        arguments:
            - '@service_container'
    markup_needle.terms:
        class: Markup\NeedleBundle\Terms\TermsServiceInterface
        factory_service: markup_needle.terms_provider
        factory_method: getServiceForAlias
        arguments:
            - %markup_needle.terms.alias%
    markup_needle.terms_field.null:
        class: Markup\NeedleBundle\Terms\NullTermsFieldProvider
    markup_needle.client.solr_managed_synonyms_client:
        class: Markup\NeedleBundle\Client\SolrManagedSynonymsClient
        arguments:
            - '@markup_needle.solarium.client'
            - '@markup_needle.client.solr_core_admin_client'
    markup_needle.client.solr_managed_stopwords_client:
        class: Markup\NeedleBundle\Client\SolrManagedStopwordsClient
        arguments:
            - '@markup_needle.solarium.client'
            - '@markup_needle.client.solr_core_admin_client'
    markup_needle.client.solr_core_admin_client:
        class: Markup\NeedleBundle\Client\SolrCoreAdminClient
        arguments:
            - '@markup_needle.solarium.client'
            - '@logger'
